import abc
from abc import ABC, abstractmethod
from typing import Any, Dict, Union

class BaseResponse(ABC, metaclass=abc.ABCMeta):
    content: Any
    status_code: Any
    wrapper_used: bool
    @abstractmethod
    def __init__(self, content: Dict[str, Any], status_code: int = ...): ...
    @abstractmethod
    def set_cookie(self, key: str, value: str, expires: int, path: str = ..., domain: Union[str, None] = ..., secure: bool = ..., httponly: bool = ..., samesite: str = ...): ...
    @abstractmethod
    def set_header(self, key: str, value: str): ...
    @abstractmethod
    def get_header(self, key: str) -> Union[str, None]: ...
    @abstractmethod
    def set_status_code(self, status_code: int): ...
    @abstractmethod
    def set_json_content(self, content: Dict[str, Any]): ...
    @abstractmethod
    def set_html_content(self, content: str): ...
