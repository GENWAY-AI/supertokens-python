from supertokens_python.recipe.emailpassword.constants import FORM_FIELD_EMAIL_ID as FORM_FIELD_EMAIL_ID, FORM_FIELD_PASSWORD_ID as FORM_FIELD_PASSWORD_ID
from supertokens_python.recipe.emailpassword.interfaces import APIInterface as APIInterface, APIOptions as APIOptions, EmailExistsGetOkResponse as EmailExistsGetOkResponse, EmailExistsGetResponse as EmailExistsGetResponse, GeneratePasswordResetTokenPostOkResponse as GeneratePasswordResetTokenPostOkResponse, GeneratePasswordResetTokenPostResponse as GeneratePasswordResetTokenPostResponse, PasswordResetPostInvalidTokenResponse as PasswordResetPostInvalidTokenResponse, PasswordResetPostOkResponse as PasswordResetPostOkResponse, PasswordResetPostResponse as PasswordResetPostResponse, SignInPostOkResponse as SignInPostOkResponse, SignInPostResponse as SignInPostResponse, SignInPostWrongCredentialsErrorResponse as SignInPostWrongCredentialsErrorResponse, SignUpPostEmailAlreadyExistsErrorResponse as SignUpPostEmailAlreadyExistsErrorResponse, SignUpPostOkResponse as SignUpPostOkResponse, SignUpPostResponse as SignUpPostResponse
from supertokens_python.recipe.emailpassword.types import FormField as FormField
from supertokens_python.recipe.session.asyncio import create_new_session as create_new_session
from supertokens_python.utils import find_first_occurrence_in_list as find_first_occurrence_in_list
from typing import Any, Dict, List

class APIImplementation(APIInterface):
    async def email_exists_get(self, email: str, api_options: APIOptions, user_context: Dict[str, Any]) -> EmailExistsGetResponse: ...
    async def generate_password_reset_token_post(self, form_fields: List[FormField], api_options: APIOptions, user_context: Dict[str, Any]) -> GeneratePasswordResetTokenPostResponse: ...
    async def password_reset_post(self, form_fields: List[FormField], token: str, api_options: APIOptions, user_context: Dict[str, Any]) -> PasswordResetPostResponse: ...
    async def sign_in_post(self, form_fields: List[FormField], api_options: APIOptions, user_context: Dict[str, Any]) -> SignInPostResponse: ...
    async def sign_up_post(self, form_fields: List[FormField], api_options: APIOptions, user_context: Dict[str, Any]) -> SignUpPostResponse: ...
