from supertokens_python.recipe.emailpassword.interfaces import APIOptions as EmailPasswordApiOptions, EmailExistsGetResponse as EmailExistsGetResponse, GeneratePasswordResetTokenPostResponse as GeneratePasswordResetTokenPostResponse, PasswordResetPostResponse as PasswordResetPostResponse, SignInPostResponse as SignInPostResponse, SignUpPostResponse as SignUpPostResponse
from supertokens_python.recipe.emailpassword.types import FormField as FormField
from supertokens_python.recipe.thirdparty.interfaces import APIOptions as ThirdPartyApiOptions, AuthorisationUrlGetResponse as AuthorisationUrlGetResponse, SignInUpPostResponse as SignInUpPostResponse
from supertokens_python.recipe.thirdparty.provider import Provider as Provider
from supertokens_python.recipe.thirdpartyemailpassword.interfaces import APIInterface as APIInterface
from typing import Any, Dict, List, Union

class APIImplementation(APIInterface):
    ep_email_exists_get: Any
    ep_generate_password_reset_token_post: Any
    ep_password_reset_post: Any
    ep_sign_in_post: Any
    ep_sign_up_post: Any
    tp_authorisation_url_get: Any
    tp_sign_in_up_post: Any
    tp_apple_redirect_handler_post: Any
    def __init__(self) -> None: ...
    async def email_exists_get(self, email: str, api_options: EmailPasswordApiOptions, user_context: Dict[str, Any]) -> EmailExistsGetResponse: ...
    async def generate_password_reset_token_post(self, form_fields: List[FormField], api_options: EmailPasswordApiOptions, user_context: Dict[str, Any]) -> GeneratePasswordResetTokenPostResponse: ...
    async def password_reset_post(self, form_fields: List[FormField], token: str, api_options: EmailPasswordApiOptions, user_context: Dict[str, Any]) -> PasswordResetPostResponse: ...
    async def thirdparty_sign_in_up_post(self, provider: Provider, code: str, redirect_uri: str, client_id: Union[str, None], auth_code_response: Union[Dict[str, Any], None], api_options: ThirdPartyApiOptions, user_context: Dict[str, Any]) -> SignInUpPostResponse: ...
    async def emailpassword_sign_in_post(self, form_fields: List[FormField], api_options: EmailPasswordApiOptions, user_context: Dict[str, Any]) -> SignInPostResponse: ...
    async def emailpassword_sign_up_post(self, form_fields: List[FormField], api_options: EmailPasswordApiOptions, user_context: Dict[str, Any]) -> SignUpPostResponse: ...
    async def authorisation_url_get(self, provider: Provider, api_options: ThirdPartyApiOptions, user_context: Dict[str, Any]) -> AuthorisationUrlGetResponse: ...
    async def apple_redirect_handler_post(self, code: str, state: str, api_options: ThirdPartyApiOptions, user_context: Dict[str, Any]): ...
