from ..utils import PhoneOrEmailInput as PhoneOrEmailInput
from supertokens_python.recipe.passwordless.interfaces import APIInterface as APIInterface, APIOptions as APIOptions, ConsumeCodePostExpiredUserInputCodeErrorResponse as ConsumeCodePostExpiredUserInputCodeErrorResponse, ConsumeCodePostIncorrectUserInputCodeErrorResponse as ConsumeCodePostIncorrectUserInputCodeErrorResponse, ConsumeCodePostOkResponse as ConsumeCodePostOkResponse, ConsumeCodePostResponse as ConsumeCodePostResponse, ConsumeCodePostRestartFlowErrorResponse as ConsumeCodePostRestartFlowErrorResponse, CreateCodePostGeneralErrorResponse as CreateCodePostGeneralErrorResponse, CreateCodePostOkResponse as CreateCodePostOkResponse, CreateCodePostResponse as CreateCodePostResponse, EmailExistsGetOkResponse as EmailExistsGetOkResponse, EmailExistsGetResponse as EmailExistsGetResponse, PhoneNumberExistsGetOkResponse as PhoneNumberExistsGetOkResponse, PhoneNumberExistsGetResponse as PhoneNumberExistsGetResponse, ResendCodePostGeneralErrorResponse as ResendCodePostGeneralErrorResponse, ResendCodePostOkResponse as ResendCodePostOkResponse, ResendCodePostResponse as ResendCodePostResponse, ResendCodePostRestartFlowErrorResponse as ResendCodePostRestartFlowErrorResponse
from supertokens_python.recipe.passwordless.utils import ContactEmailOnlyConfig as ContactEmailOnlyConfig, ContactEmailOrPhoneConfig as ContactEmailOrPhoneConfig, ContactPhoneOnlyConfig as ContactPhoneOnlyConfig, CreateAndSendCustomEmailParameters as CreateAndSendCustomEmailParameters, CreateAndSendCustomTextMessageParameters as CreateAndSendCustomTextMessageParameters
from supertokens_python.recipe.session.asyncio import create_new_session as create_new_session
from typing import Any, Dict, Union

class APIImplementation(APIInterface):
    async def create_code_post(self, email: Union[str, None], phone_number: Union[str, None], api_options: APIOptions, user_context: Dict[str, Any]) -> CreateCodePostResponse: ...
    async def resend_code_post(self, device_id: str, pre_auth_session_id: str, api_options: APIOptions, user_context: Dict[str, Any]) -> ResendCodePostResponse: ...
    async def consume_code_post(self, pre_auth_session_id: str, user_input_code: Union[str, None], device_id: Union[str, None], link_code: Union[str, None], api_options: APIOptions, user_context: Dict[str, Any]) -> ConsumeCodePostResponse: ...
    async def email_exists_get(self, email: str, api_options: APIOptions, user_context: Dict[str, Any]) -> EmailExistsGetResponse: ...
    async def phone_number_exists_get(self, phone_number: str, api_options: APIOptions, user_context: Dict[str, Any]) -> PhoneNumberExistsGetResponse: ...
